@inherits PartialViewMacroPage
@using Rebel.Cms.Web
@using Rebel.Cms.Web.Macros
@using Rebel.Framework


@* Ensure that the Current Page has children, where the property rebelNaviHide is not True *@
@if (CurrentPage.Children.Where("rebelNaviHide != @0", "True").Any())
{
    @* Get the first page in the children, where the property rebelNaviHide is not True *@
    var naviLevel = CurrentPage.Children.Where("rebelNaviHide != @0", "True").First().Level;
    
    @* Add in level for a CSS hook *@
    <ul class="level-@naviLevel">            
        @* For each child page under the root node, where the property rebelNaviHide is not True *@
        @foreach (var childPage in CurrentPage.Children.Where("rebelNaviHide != @0", "True"))
        {
            <li>
                <a href="@childPage.Url">@childPage.Name</a>

                @* if the current page has any children, where the property rebelNaviHide is not True *@
                @if (childPage.Children.Where("rebelNaviHide != @0", "True").Any())
                {                    
                    @* Call our helper to display the children *@
                    @childPages(childPage.Children)
                }
            </li>
        }
    </ul>
}


@helper childPages(dynamic pages)
    {
    @* Ensure that we have a collection of pages *@
    if (pages.Any())
    {
        @* Get the first page in pages and get the level *@
        var naviLevel = pages.First().Level;
        
        @* Add in level for a CSS hook *@
        <ul class="level-@(naviLevel)">
            @foreach (var page in pages.Where("rebelNaviHide != @0", "True"))
            {
                <li>
                    <a href="@page.Url">@page.Name</a>
                    
                    @* if the current page has any children, where the property rebelNaviHide is not True *@
                    @if (page.Children.Where("rebelNaviHide != @0", "True").Any())
                    {                        
                        @* Call our helper to display the children *@
                        @childPages(page.Children)
                    }
                </li>
            }
        </ul>
    }
}