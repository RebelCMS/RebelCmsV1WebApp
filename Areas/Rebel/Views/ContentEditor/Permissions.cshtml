@using System.Collections.Concurrent
@model Rebel.Cms.Web.Model.BackOffice.Editors.PermissionsModel
@{
    Layout = "../Shared/_DialogLayout.cshtml";

    ViewBag.Title = "Action.Permissions.Title".Localize();
    ViewBag.Action = "Permissions";
    
    Html.EnableClientValidation();
    Html.EnableUnobtrusiveJavaScript();
    Html.EnablePartialViewValidation();
}
@section Head {
    @{
        Html
            .RequiresJs("Rebel.UI/PermissionsGrid.js", "Scripts")
            .RequiresJs("Rebel.Editors/PermissionsDialog.js", "Scripts");
    }
    <script type="text/javascript">
        (function ($) {
            $(document).ready(function () {
                Rebel.Editors.PermissionsDialog.getInstance().init({
                    id: "@Model.Id",
                    userGroupPermissions: @Html.ToJsonString(@Model.UserGroupPermissions)
                });
            });
        })(jQuery);
    </script>
}
<div>
    <h2>@("Action.Permissions.Title".Localize())</h2>
    <div class="narrow-editor clearfix" data-bind="visible: userGroups().length > 0">              
               
        <div class="property-pane">
            @*User Groups Dropdown*@
            @Html.UmbEditorFor(x => Model, Html.DropDownListFor(x => Model.UserGroupPermissions, new SelectList(Model.UserGroupPermissions, "UserGroupHtmlId", "UserGroupName"), new { @class = "user-group-selector" }))
        </div>

        @*Permissions Grids*@
        <div class="property-pane permissions-grids-container">
            @foreach (var userGroupsPermissionsModel in Model.UserGroupPermissions)
            {
                <div id="@userGroupsPermissionsModel.UserGroupId.GetHtmlId()" class="permissions-grid-container"></div>
            }
        </div>

    </div>
    <div class="narrow-editor clearfix" data-bind="visible: userGroups().length == 0">              
               
        <div class="notice">@("Permissions.NoUserGroups.Message".Localize())</div>

    </div>
</div>